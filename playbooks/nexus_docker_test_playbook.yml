---
- name: Install Docker and run Nexus
  hosts: all
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc

    - name: Set permissions for Docker GPG key
      file:
        path: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache after adding Docker repository
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: yes
        
    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
    
    - name: Pull Nexus Docker image
      docker_image:
        name: sonatype/nexus3:3.74.0-ubi
        source: pull

    - name: Create nexus-data directory with correct permissions
      ansible.builtin.file:
        path: /opt/nexus-data
        state: directory
        mode: '0777'
        owner: 1000
        group: 1000

    - name: Create Nexus container
      docker_container:
        name: nexus
        image: sonatype/nexus3:3.74.0-ubi
        state: started
        restart_policy: always
        published_ports:
          - "8081:8081"
        volumes:
          - /opt/nexus-data:/nexus-data
    
    - name: Nexus container is running
      docker_container:
        name: nexus
        state: started
        restart_policy: always
